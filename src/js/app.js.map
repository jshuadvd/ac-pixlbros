{"version":3,"sources":["index.js"],"names":["camera","scene","renderer","isUserInteracting","onMouseDownMouseX","onMouseDownMouseY","lon","onMouseDownLon","lat","onMouseDownLat","phi","theta","fovMin","fovMax","zoomed","onPointerDownPointerX","onPointerDownPointerY","onPointerDownLon","onPointerDownLat","init","animate","container","mesh","document","getElementById","THREE","PerspectiveCamera","window","innerWidth","innerHeight","target","Vector3","Scene","geometry","SphereGeometry","scale","material","MeshBasicMaterial","map","TextureLoader","load","Mesh","add","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","appendChild","domElement","addEventListener","onDocumentMouseDown","onDocumentMouseMove","onDocumentMouseUp","onDocumentClick","onWindowResize","aspect","updateProjectionMatrix","event","preventDefault","clientX","clientY","fov","requestAnimationFrame","update","Math","max","min","degToRad","x","sin","cos","y","z","lookAt","render"],"mappings":"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","file":"app.js","sourcesContent":["let camera;\nlet scene;\nlet renderer;\nlet isUserInteracting = false;\nconst onMouseDownMouseX = 0;\nconst onMouseDownMouseY = 0;\nlet lon = 0;\nconst onMouseDownLon = 0;\nlet lat = 0;\nconst onMouseDownLat = 0;\nlet phi = 0;\nlet theta = 0;\n\nlet fovMin = 75;\nlet fovMax = 55;\nlet zoomed;\n\nlet onPointerDownPointerX;\nlet onPointerDownPointerY;\nlet onPointerDownLon;\nlet onPointerDownLat;\n\ninit();\nanimate();\n\nfunction init() {\n\tlet container;\n\tlet mesh;\n\tcontainer = document.getElementById('container');\n\tcamera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1100);\n\tcamera.target = new THREE.Vector3(0, 0, 0);\n\tscene = new THREE.Scene();\n\tconst geometry = new THREE.SphereGeometry(500, 60, 40);\n\tgeometry.scale(-1, 1, 1);\n\tconst material = new THREE.MeshBasicMaterial({\n\t\tmap: new THREE.TextureLoader().load('textures/AnimusPanorama.jpg')\n\t});\n\tmesh = new THREE.Mesh(geometry, material);\n\tscene.add(mesh);\n\trenderer = new THREE.WebGLRenderer();\n\trenderer.setPixelRatio(window.devicePixelRatio);\n\trenderer.setSize(window.innerWidth, window.innerHeight);\n\tcontainer.appendChild(renderer.domElement);\n\tdocument.addEventListener('mousedown', onDocumentMouseDown, false);\n\tdocument.addEventListener('mousemove', onDocumentMouseMove, false);\n\tdocument.addEventListener('mouseup', onDocumentMouseUp, false);\n\tdocument.addEventListener('click', onDocumentClick, false);\n\twindow.addEventListener('resize', onWindowResize, false);\n}\n\nfunction onWindowResize() {\n\tcamera.aspect = window.innerWidth / window.innerHeight;\n\tcamera.updateProjectionMatrix();\n\trenderer.setSize(window.innerWidth, window.innerHeight);\n}\n\nfunction onDocumentMouseDown(event) {\n\tevent.preventDefault();\n\tisUserInteracting = true;\n\tonPointerDownPointerX = event.clientX;\n\tonPointerDownPointerY = event.clientY;\n\tonPointerDownLon = lon;\n\tonPointerDownLat = lat;\n}\n\nfunction onDocumentMouseMove(event) {\n\tif (isUserInteracting === true) {\n\t\tlon = (onPointerDownPointerX - event.clientX) * 0.1 + onPointerDownLon;\n\t}\n}\n\nfunction onDocumentMouseUp(event) {\n\tisUserInteracting = false;\n}\n\nfunction onDocumentClick(event) {\n\tcamera.fov = zoomed ? fovMin : fovMax\n\tzoomed = !zoomed\n\tcamera.updateProjectionMatrix();\n}\n\nfunction animate() {\n\trequestAnimationFrame(animate);\n\tupdate();\n}\n\nfunction update() {\n\tlat = Math.max(-85, Math.min(85, lat));\n\tphi = THREE.Math.degToRad(90 - lat);\n\ttheta = THREE.Math.degToRad(lon);\n\tcamera.target.x = 500 * Math.sin(phi) * Math.cos(theta);\n\tcamera.target.y = 500 * Math.cos(phi);\n\tcamera.target.z = 500 * Math.sin(phi) * Math.sin(theta);\n\tcamera.lookAt(camera.target);\n\trenderer.render(scene, camera);\n}"]}