{"version":3,"sources":["index.js"],"names":["onPointerDownPointerX","onPointerDownPointerY","onPointerDownLon","onPointerDownLat","camera","container","controls","clock","info","mesh","renderer","raycaster","scene","isUserInteracting","onMouseDownMouseX","onMouseDownMouseY","lon","onMouseDownLon","lat","onMouseDownLat","phi","theta","document","getElementById","init","animate","moveForward","moveBackward","moveLeft","moveRight","canJump","prevTime","performance","now","velocity","THREE","Vector3","PerspectiveCamera","window","innerWidth","innerHeight","target","Scene","geometry","SphereGeometry","scale","material","MeshBasicMaterial","map","TextureLoader","load","Mesh","add","PointerLockControls","getObject","onKeyDown","event","keyCode","y","onKeyUp","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","appendChild","domElement","addEventListener","getPosition","onDocumentMouseDown","onDocumentMouseMove","onDocumentMouseUp","onDocumentMouseWheel","preventDefault","dataTransfer","dropEffect","body","style","opacity","reader","FileReader","image","src","result","needsUpdate","readAsDataURL","files","onWindowResize","aspect","updateProjectionMatrix","clientX","console","log","fov","deltaY","requestAnimationFrame","update","Math","max","min","degToRad","x","sin","cos","z","lookAt","render","Number","undefined","scrollLeft","documentElement","clientY","scrollTop","offsetLeft","offsetTop"],"mappings":"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","file":"app.js","sourcesContent":["// let camera;\n// let scene;\n// let renderer;\n// let isUserInteracting = false;\n// const onMouseDownMouseX = 0;\n// const onMouseDownMouseY = 0;\n// const onMouseDownLat = 0;\n// const onMouseDownLon = 0;\n// let lon = 30;\n// let lat = 0;\n// let phi = 0;\n// let theta = 0;\n// let fovMin = 75;\n// let fovMax = 55;\n// let zoomed;\n// \nlet onPointerDownPointerX;\nlet onPointerDownPointerY;\nlet onPointerDownLon;\nlet onPointerDownLat;\n// \n// let selected;\n// let controls;\n// let timeline;\n// \n// // Init audio \n// let audio = document.getElementById('player');\n// audio.play();\n// audio.volume = 1;\n// audio.crossOrigin = \"anonymous\";\n// \n// \n// init();\n// animate();\n// \n// function init() {\n// \tlet container;\n// \tlet mesh;\n// \tcontainer = document.getElementById('container');\n// \tcamera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1500);\n// \t// camera.position.set( 0, 0, 60 );\n// \tcamera.target = new THREE.Vector3(0, 0, 0);\n// \n// \tlat = Math.max(-85, Math.min(85,lat));\n// \tphi = THREE.Math.degToRad(90-lat);\n// \ttheta = THREE.Math.degToRad(lon);\n// \tcamera.target.x = 500;\n// \tcamera.lookAt(camera.target);\n// \n// \tscene = new THREE.Scene();\n// \tscene.add(camera)\n// \tconst geometry = new THREE.SphereGeometry(500, 60, 40);\n// \tgeometry.scale(-1, 1, 1);\n// \tconst material = new THREE.MeshBasicMaterial({\n// \t\tmap: new THREE.TextureLoader().load('textures/AnimusPanorama.jpg')\n// \t});\n// \tmesh = new THREE.Mesh(geometry, material);\n// \tmesh.name = 'scene';\n// \tscene.add(mesh);\n// \t\n// \n// \n// \t// add light\n// \t// let light = new THREE.DirectionalLight('white', 1);\n// \t// light.position.set(-4,4,4);\n// \t// light.name = 'Back light';\n// \t// scene.add(light);\n// \t\n// \t// Add spotlight for case focus\n// \t// let spotLight = new THREE.SpotLight(0xffffff, 2.2, 1000, Math.PI/10.5, 0.001);\n// \t// spotLight.castShadow = true;\n// \t// spotLight.position.set(52, 75, 50);\n// \t// spotLight.shadowMapWidth = 1024;\n// \t// spotLight.shadowMapHeight = 1024;\n// \t// spotLight.shadowCameraNear = 1;\n// \t// spotLight.shadowCameraFar = 1000;\n// \t// scene.add(spotLight);\n// \t\n// \t// Add marker to set initial position for click\n// \tlet marker = new THREE.Object3D();\n// \tmarker.position.set(0,0,0);\n// \t// marker.add(spotLight);\n// \tscene.add(marker);\n// \n// \t// add a sphere to click\n// \t// let mat2 = new THREE.MeshLambertMaterial({side: THREE.DoubleSide, color: '#f4d742'});\n// \t// let object = new THREE.Mesh(new THREE.SphereGeometry(4,20,20),mat2);\n// \t// object.position.set( 40, 0, 0 );\n// \t// object.name = 'Object 1';\n// \t// scene.add(object);\n// \n// \trenderer = new THREE.WebGLRenderer();\n// \trenderer.setPixelRatio(window.devicePixelRatio);\n// \trenderer.setSize(window.innerWidth, window.innerHeight);\n// \tcontainer.appendChild(renderer.domElement);\n// \n// \t// set up controls\n// \tcontrols = new THREE.TrackballControls(camera);\n// \tcontrols.rotateSpeed = 3.6;\n// \tcontrols.zoomSpeed = 0.8;\n// \tcontrols.panSpeed = 1;\n// \tcontrols.noZoom = false;\n// \tcontrols.noPan = false;\n// \tcontrols.staticMoving = false;\n// \tcontrols.dynamicDampingFactor = 0.12;\n// \tcontrols.enabled = true;\n// \t\n// \tTweenLite.ticker.addEventListener('tick', render );\n// \n// \ttimeline = new TimelineLite({\n// \t\tonStart: function(){\n// \t\t\tTweenLite.ticker.removeEventListener(\"tick\", controls.update );\n// \t\t\tcontrols.enabled = false;\n// \t\t},\n// \t\tonComplete: function(){\n// \t\t\tTweenLite.ticker.addEventListener(\"tick\", controls.update );\n// \t\t\tcontrols.position0.copy(camera.position);\n// \t\t\tcontrols.reset();\n// \t\t\tcontrols.enabled = true;\n// \t\t}\n// \t});\n// \n// \t// set up click handlers\n// \t// document.addEventListener('mousedown', onDocumentMouseDown, false);\n// \t// document.addEventListener('mousemove', onDocumentMouseMove, false);\n// \tdocument.addEventListener('mouseup', onDocumentMouseUp, false);\n// \twindow.addEventListener('resize', onWindowResize, false);\n// \tdocument.addEventListener('mousedown', mouseDown, false);\n// \tTweenLite.ticker.addEventListener(\"tick\", controls.update);\n// \t\n// }\n// \n// let startX\n// let startY\n// let easing = 'Expo.easeInOut';\n// \n// function getDistance(object) {\n// \tconst helper = new THREE.BoundingBoxHelper(object, 0xff0000);\n// \thelper.update();\n// \n// \tlet width = helper.scale.x;\n// \tlet height = helper.scale.y;\n// \n// \t// Set camera distance\n// \tconst vFOV = camera.fov * Math.PI / 180;\n// \n// \tconst ratio = 2 * Math.tan( vFOV / 2 );\n// \tconst screen = ratio * camera.aspect;\n// \tconst size = Math.max(height,width);\n// \tconst distance = (size / screen) + (helper.box.max.z / screen);\n// \n// \treturn distance;\n// };\n// \n// function reset() {\n// \n// \tvar pos = { x: 0, y: 0 };\n// \tconst distance = 60;\n// \tconst speed = 1;\n//  \n// \tif ( camera.parent !== scene ) {\n// \t\tvar pos = camera.position.clone();\n// \t\tcamera.parent.localToWorld(camera.position);\n// \t\tscene.add(camera);\n// \t}\n//  \n// \ttimeline.clear();\n// \ttimeline.to( camera.position, speed, { \n// \tx: pos.x, \n// \ty: pos.y, \n// \tz: distance, \n// \tease: easing \n// \t}, 0);\n//  \ttimeline.to( camera.rotation, speed, { x: 0, y: 0, z: 0, ease: easing}, 0);\n// \n// }; \n// \n// function zoom(object) {\n// \n// \tconst pos = camera.position.clone();\n// \tobject.worldToLocal(camera.position);\n// \tobject.add(camera);\n// \n// \tconst speed = 1;\n// \ttimeline.clear();\n// \n// \ttimeline.to( camera.position, speed, {\n// \t\tx: pos.x,\n// \t\ty: pos.y,\n// \t\tz: getDistance(object),\n// \t\tease: easing\n// \t},0);\n// \n// };\n// \n// function mouseDown(e) {\n// \tconst x = ( e.touches ? e.touches[0].clientX : e.clientX );\n// \tconst y = ( e.touches ? e.touches[0].clientY : e.clientY );\n// \tconst mouse = {\n// \t\tx: ( x / window.innerWidth ) * 2 - 1,\n// \t\ty: - ( y / window.innerHeight ) * 2 + 1\n// \t};\n// \tconst vector = new THREE.Vector3( mouse.x, mouse.y ).unproject( camera );\n// \tconst raycaster = new THREE.Raycaster(camera.position, vector.sub(camera.position).normalize());\n// \tconst intersects = raycaster.intersectObject( scene, true );\n// \tif(intersects.length > 0 && intersects[0].object !== selected && intersects[0].object.name !== 'scene') {\n// \t\tselected = intersects[0].object;\n// \t\tconsole.log(selected);\n// \t\tzoom(selected);\n// \t} else {\n// \t\tselected = null;\n// \t\treset(); \n// \t}\n// }\n// \n// function onWindowResize() {\n// \tcamera.aspect = window.innerWidth / window.innerHeight;\n// \tcamera.updateProjectionMatrix();\n// \trenderer.setSize(window.innerWidth, window.innerHeight);\n// }\n// \n// function onDocumentMouseDown(event) {\n// \tevent.preventDefault();\n// \tisUserInteracting = true;\n// \tonPointerDownPointerX = event.clientX;\n// \tonPointerDownPointerY = event.clientY;\n// \tonPointerDownLon = lon;\n// \tonPointerDownLat = lat;\n// }\n// \n// function onDocumentMouseWheel( event ) {\n// \tconsole.log('event', camera.fov)\n// \n// \tcamera.fov += event.deltaY * 0.05;\n// \tcamera.updateProjectionMatrix();\n// \n// }\n// \n// function onDocumentMouseMove(event) {\n// \tif (isUserInteracting === true) {\n// \t\tlon = (onPointerDownPointerX - event.clientX) * 0.1 + onPointerDownLon;\n// \t}\n// }\n// \n// function onDocumentMouseUp(event) {\n// \tisUserInteracting = false;\n// }\n// \n// function onDocumentClick(event) {\n// \tcamera.fov = zoomed ? fovMin : fovMax\n// \t// i = zoomed ? -1 : 1\n// \tzoomed = !zoomed\n// \ttween\n// \t// .onUpdate(() => {\n// \t// \tcamera.fov = \n// \t// })\n// \t.start();\n// \n// \n// \t// int = setInterval(() => {\n// \t// \tval = val + 0.05*i;\n// \t// \tcamera.fov = val;\n// \t// \ti++;\n// \t// \tconsole.log(val);\n// \t// \tif(val > 85) {\n// \t// \t\tclearInterval(int)\n// \t// \t}\n// \t// },30);\n// }\n// \n// // var coords = { x: 0, y: 0 };\n// // var tween = new TWEEN.Tween({x: 75})\n// //     .to({x: 85}, 1000)\n// //     .onUpdate(function() {\n// //     \tcamera.fov = this.x\n// //     })\n// \n// function animate() {\n// \trequestAnimationFrame(animate);\n// \tupdate();\n// }\n// \n// function render() {\n// \trenderer.render(scene, camera);\n// }\n// \n// function update(time) {\n// \tlat = Math.max(-85, Math.min(85, lat));\n// \tphi = THREE.Math.degToRad(90 - lat);\n// \ttheta = THREE.Math.degToRad(lon);\n// \tcamera.target.x = 500 * Math.sin(phi) * Math.cos(theta);\n// \tcamera.target.y = 500 * Math.cos(phi);\n// \tcamera.target.z = 500 * Math.sin(phi) * Math.sin(theta);\n// \tcamera.lookAt(camera.target);\n// \t// TWEEN.update(time);\n// \t// camera.fov = camera.fov += 0.1 \n// \t// console.log(camera.fov)\n// \tcamera.updateProjectionMatrix();\n// \trender();\n// }\n// \n// function  orbit(origin, h, v, distance) {    \n// \torigin = origin || new THREE.Vector3();    \n// \tvar p = new THREE.Vector3();    \n// \tvar phi = v * Math.PI / 180;    \n// \tvar theta = h * Math.PI / 180;    \n// \tp.x = (distance * Math.sin(phi) * Math.cos(theta)) + origin.x;    \n// \tp.z = (distance * Math.sin(phi) * Math.sin(theta)) + origin.z;    \n// \tp.y = (distance * Math.cos(phi)) + origin.y;    \n// \treturn p;\n// }\n\nvar camera, container, controls, clock, info, mesh, renderer, raycaster, scene;\n// var MOVESPEED = 0, LOOKSPEED = 0.075, CAMERAMOVESPEED = MOVESPEED * 2;\nvar isUserInteracting = false,\nonMouseDownMouseX = 0, onMouseDownMouseY = 0,\nlon = 30, onMouseDownLon = 0,\nlat = 0, onMouseDownLat = 0,\nphi = 0, theta = 0;\n\ncontainer = document.getElementById( 'container' );\n// info = document.getElementById( 'info' );\n\ninit();\nanimate();\n\nvar moveForward = false;\nvar moveBackward = false;\nvar moveLeft = false;\nvar moveRight = false;\nvar canJump = false;\nvar prevTime = performance.now();\nvar velocity = new THREE.Vector3();\n\nfunction init() {\n\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 1100 );\n\tcamera.target = new THREE.Vector3( 0, 0, 0 );\n\n\tscene = new THREE.Scene();\n\n\tvar geometry = new THREE.SphereGeometry( 500, 60, 400 );\n\tgeometry.scale( - 1, 1, 1 );\n\n\tvar material = new THREE.MeshBasicMaterial( {\n\t\tmap: new THREE.TextureLoader().load( 'textures/AnimusPanorama.jpg' )\n\t} );\n\n\tmesh = new THREE.Mesh( geometry, material );\n\tscene.add( mesh );\n\t\n\t// controls = new THREE.FirstPersonControls( camera );\n\t// controls.movementSpeed = MOVESPEED;\n\t// controls.lookSpeed = LOOKSPEED;\n\t// controls.lookVertical = false; // Temporary solution; play on flat surfaces only\n\t// controls.noFly = true;\n\t// clock = new THREE.Clock();\n\t\n\tcontrols = new THREE.PointerLockControls( camera );\n\tscene.add( controls.getObject() );\n\t\n\tvar onKeyDown = function ( event ) {\n\t\tswitch ( event.keyCode ) {\n\t\t\t\n\t\t\tcase 38: // up\n\t\t\tcase 87: // w\n\t\t\tmoveForward = true;\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase 37: // left\n\t\t\tcase 65: // a\n\t\t\tmoveLeft = true; break;\n\t\t\t\n\t\t\tcase 40: // down\n\t\t\tcase 83: // s\n\t\t\tmoveBackward = true;\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase 39: // right\n\t\t\tcase 68: // d\n\t\t\tmoveRight = true;\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase 32: // space\n\t\t\tif ( canJump === true ) velocity.y += 350;\n\t\t\tcanJump = false;\n\t\t\tbreak;\n\t\t\t\n\t\t}\n\t\t\n\t};\n\t\n\tvar onKeyUp = function ( event ) {\n\t\tswitch( event.keyCode ) {\n\t\t\t\n\t\t\tcase 38: // up\n\t\t\tcase 87: // w\n\t\t\tmoveForward = false;\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase 37: // left\n\t\t\tcase 65: // a\n\t\t\tmoveLeft = false;\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase 40: // down\n\t\t\tcase 83: // s\n\t\t\tmoveBackward = false;\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase 39: // right\n\t\t\tcase 68: // d\n\t\t\tmoveRight = false;\n\t\t\tbreak;\n\t\t\t\n\t\t}\n\t\t\n\t};\n\n\trenderer = new THREE.WebGLRenderer();\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\tcontainer.appendChild( renderer.domElement );\n\tcontainer.addEventListener(\"mousedown\", getPosition, false);\n\t// container.addEventListener(\"mousemove\", getPosition, false);\n\t\n\n\tdocument.addEventListener( 'mousedown', onDocumentMouseDown, false );\n\tdocument.addEventListener( 'mousemove', onDocumentMouseMove, false );\n\tdocument.addEventListener( 'mouseup', onDocumentMouseUp, false );\n\tdocument.addEventListener( 'wheel', onDocumentMouseWheel, false );\n\tdocument.addEventListener( 'keydown', onKeyDown, false );\n\tdocument.addEventListener( 'keyup', onKeyUp, false );\n\t// document.addEventListener(\"DOMContentLoaded\", init, false);\n\n\n\tdocument.addEventListener( 'dragover', function ( event ) {\n\n\t\tevent.preventDefault();\n\t\tevent.dataTransfer.dropEffect = 'copy';\n\n\t}, false );\n\n\tdocument.addEventListener( 'dragenter', function ( event ) {\n\n\t\tdocument.body.style.opacity = 0.5;\n\n\t}, false );\n\n\tdocument.addEventListener( 'dragleave', function ( event ) {\n\n\t\tdocument.body.style.opacity = 1;\n\n\t}, false );\n\n\tdocument.addEventListener( 'drop', function ( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tvar reader = new FileReader();\n\t\treader.addEventListener( 'load', function ( event ) {\n\n\t\t\tmaterial.map.image.src = event.target.result;\n\t\t\tmaterial.map.needsUpdate = true;\n\n\t\t}, false );\n\t\treader.readAsDataURL( event.dataTransfer.files[ 0 ] );\n\n\t\tdocument.body.style.opacity = 1;\n\n\t}, false );\n\n\twindow.addEventListener( 'resize', onWindowResize, false );\n\n}\n\nfunction onWindowResize() {\n\n\tcamera.aspect = window.innerWidth / window.innerHeight;\n\tcamera.updateProjectionMatrix();\n\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n}\n\nfunction onDocumentMouseDown( event ) {\n\n\tevent.preventDefault();\n\n\tisUserInteracting = true;\n\n\tonPointerDownPointerX = event.clientX;\n\t// onPointerDownPointerY = event.clientY;\n\n\tonPointerDownLon = lon;\n\t// onPointerDownLat = lat;\n\n}\n\nfunction onDocumentMouseMove( event ) {\n\t\n\tconsole.log(\"IM MOVING YALL!!!!!!!\");\n\t// onPointerDownLon = lon;\n\t// isUserInteracting = true\n\t// lon = ( onPointerDownPointerX - event.clientX ) * 0.1 + onPointerDownLon;\n\t// $( \"#container\" ).mousemove(function( event ) {\n\t// \t\t\n\t// });\n\t\n\tif ( isUserInteracting === true ) {\n\t\tlon = ( onPointerDownPointerX - event.clientX ) * 0.1 + onPointerDownLon;\n\t\t// lat = ( event.clientY - onPointerDownPointerY ) * 0.1 + onPointerDownLat;\n\t}\n\n}\n\nfunction onDocumentMouseUp( event ) {\n\n\tisUserInteracting = false;\n\n}\n\n// Zoom in & out | Need to limit this to the starting point and a endind point\nfunction onDocumentMouseWheel( event ) {\n\t\n\tcamera.fov += event.deltaY * 0.05;\n\tcamera.updateProjectionMatrix();\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\tupdate();\n\n}\n\nfunction update() {\n\t\t\n\tif ( isUserInteracting === false ) {\n\t\t// lon += 0.1;\n\t}\n\n\tlat = Math.max( - 85, Math.min( 85, lat ) );\n\tphi = THREE.Math.degToRad( 90 - lat );\n\ttheta = THREE.Math.degToRad( lon );\n\n\tcamera.target.x = 500 * Math.sin( phi ) * Math.cos( theta );\n\t// camera.target.y = 500 * Math.cos( phi );\n\tcamera.target.z = 500 * Math.sin( phi ) * Math.sin( theta );\n\n\tcamera.lookAt( camera.target );\n\n\t/*\n\t// distortion\n\tcamera.position.copy( camera.target ).negate();\n\t*/\n\t// var delta = clock.getDelta(), speed = delta * CAMERAMOVESPEED;\n\t// controls.update(delta);\n\t\n\trenderer.render( scene, camera );\n\n}\n\nfunction getPosition(event) {\n\tvar x = new Number();\n\tvar y = new Number();\n\t\n\tif (event.x != undefined && event.y != undefined) {\n\t\tx = event.x;\n\t\ty = event.y;\n\t} else { // Firefox method to get the position\n\t\tx = event.clientX + document.body.scrollLeft +\n\t\tdocument.documentElement.scrollLeft;\n\t\ty = event.clientY + document.body.scrollTop +\n\t\tdocument.documentElement.scrollTop;\n\t}\n\tx -= container.offsetLeft;\n\ty -= container.offsetTop;\t\n\t// alert(\"x: \" + x + \"  y: \" + y);\n\tconsole.log();(\"x: \" + x + \"  y: \" + y);\n\t\n}"]}