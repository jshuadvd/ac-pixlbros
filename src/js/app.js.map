{"version":3,"sources":["index.js"],"names":["onPointerDownPointerX","onPointerDownPointerY","onPointerDownLon","onPointerDownLat","camera","scene","renderer","isUserInteracting","onMouseDownMouseX","onMouseDownMouseY","lon","onMouseDownLon","lat","onMouseDownLat","phi","theta","init","animate","container","mesh","document","getElementById","THREE","PerspectiveCamera","window","innerWidth","innerHeight","target","Vector3","Scene","geometry","SphereGeometry","scale","material","MeshBasicMaterial","map","TextureLoader","load","Mesh","add","camControls","FirstPersonControls","lookSpeed","movementSpeed","noFly","lookVertical","constrainVertical","verticalMin","verticalMax","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","appendChild","domElement","addEventListener","getPosition","onDocumentMouseDown","onDocumentMouseMove","onDocumentMouseUp","onDocumentMouseWheel","event","preventDefault","dataTransfer","dropEffect","body","style","opacity","reader","FileReader","image","src","result","needsUpdate","readAsDataURL","files","onWindowResize","aspect","updateProjectionMatrix","clientX","fov","deltaY","requestAnimationFrame","update","Math","max","min","degToRad","x","sin","cos","y","z","lookAt","render","Number","undefined","scrollLeft","documentElement","clientY","scrollTop","offsetLeft","offsetTop","console","log"],"mappings":"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","file":"app.js","sourcesContent":["// let camera;\n// let scene;\n// let renderer;\n// let isUserInteracting = false;\n// const onMouseDownMouseX = 0;\n// const onMouseDownMouseY = 0;\n// const onMouseDownLat = 0;\n// const onMouseDownLon = 0;\n// let lon = 30;\n// let lat = 0;\n// let phi = 0;\n// let theta = 0;\n// let fovMin = 75;\n// let fovMax = 55;\n// let zoomed;\n// \nlet onPointerDownPointerX;\nlet onPointerDownPointerY;\nlet onPointerDownLon;\nlet onPointerDownLat;\n// \n// let selected;\n// let controls;\n// let timeline;\n// \n// // Init audio \n// let audio = document.getElementById('player');\n// audio.play();\n// audio.volume = 1;\n// audio.crossOrigin = \"anonymous\";\n// \n// \n// init();\n// animate();\n// \n// function init() {\n// \tlet container;\n// \tlet mesh;\n// \tcontainer = document.getElementById('container');\n// \tcamera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1500);\n// \t// camera.position.set( 0, 0, 60 );\n// \tcamera.target = new THREE.Vector3(0, 0, 0);\n// \n// \tlat = Math.max(-85, Math.min(85,lat));\n// \tphi = THREE.Math.degToRad(90-lat);\n// \ttheta = THREE.Math.degToRad(lon);\n// \tcamera.target.x = 500;\n// \tcamera.lookAt(camera.target);\n// \n// \tscene = new THREE.Scene();\n// \tscene.add(camera)\n// \tconst geometry = new THREE.SphereGeometry(500, 60, 40);\n// \tgeometry.scale(-1, 1, 1);\n// \tconst material = new THREE.MeshBasicMaterial({\n// \t\tmap: new THREE.TextureLoader().load('textures/AnimusPanorama.jpg')\n// \t});\n// \tmesh = new THREE.Mesh(geometry, material);\n// \tmesh.name = 'scene';\n// \tscene.add(mesh);\n// \t\n// \n// \n// \t// add light\n// \t// let light = new THREE.DirectionalLight('white', 1);\n// \t// light.position.set(-4,4,4);\n// \t// light.name = 'Back light';\n// \t// scene.add(light);\n// \t\n// \t// Add spotlight for case focus\n// \t// let spotLight = new THREE.SpotLight(0xffffff, 2.2, 1000, Math.PI/10.5, 0.001);\n// \t// spotLight.castShadow = true;\n// \t// spotLight.position.set(52, 75, 50);\n// \t// spotLight.shadowMapWidth = 1024;\n// \t// spotLight.shadowMapHeight = 1024;\n// \t// spotLight.shadowCameraNear = 1;\n// \t// spotLight.shadowCameraFar = 1000;\n// \t// scene.add(spotLight);\n// \t\n// \t// Add marker to set initial position for click\n// \tlet marker = new THREE.Object3D();\n// \tmarker.position.set(0,0,0);\n// \t// marker.add(spotLight);\n// \tscene.add(marker);\n// \n// \t// add a sphere to click\n// \t// let mat2 = new THREE.MeshLambertMaterial({side: THREE.DoubleSide, color: '#f4d742'});\n// \t// let object = new THREE.Mesh(new THREE.SphereGeometry(4,20,20),mat2);\n// \t// object.position.set( 40, 0, 0 );\n// \t// object.name = 'Object 1';\n// \t// scene.add(object);\n// \n// \trenderer = new THREE.WebGLRenderer();\n// \trenderer.setPixelRatio(window.devicePixelRatio);\n// \trenderer.setSize(window.innerWidth, window.innerHeight);\n// \tcontainer.appendChild(renderer.domElement);\n// \n// \t// set up controls\n// \tcontrols = new THREE.TrackballControls(camera);\n// \tcontrols.rotateSpeed = 3.6;\n// \tcontrols.zoomSpeed = 0.8;\n// \tcontrols.panSpeed = 1;\n// \tcontrols.noZoom = false;\n// \tcontrols.noPan = false;\n// \tcontrols.staticMoving = false;\n// \tcontrols.dynamicDampingFactor = 0.12;\n// \tcontrols.enabled = true;\n// \t\n// \tTweenLite.ticker.addEventListener('tick', render );\n// \n// \ttimeline = new TimelineLite({\n// \t\tonStart: function(){\n// \t\t\tTweenLite.ticker.removeEventListener(\"tick\", controls.update );\n// \t\t\tcontrols.enabled = false;\n// \t\t},\n// \t\tonComplete: function(){\n// \t\t\tTweenLite.ticker.addEventListener(\"tick\", controls.update );\n// \t\t\tcontrols.position0.copy(camera.position);\n// \t\t\tcontrols.reset();\n// \t\t\tcontrols.enabled = true;\n// \t\t}\n// \t});\n// \n// \t// set up click handlers\n// \t// document.addEventListener('mousedown', onDocumentMouseDown, false);\n// \t// document.addEventListener('mousemove', onDocumentMouseMove, false);\n// \tdocument.addEventListener('mouseup', onDocumentMouseUp, false);\n// \twindow.addEventListener('resize', onWindowResize, false);\n// \tdocument.addEventListener('mousedown', mouseDown, false);\n// \tTweenLite.ticker.addEventListener(\"tick\", controls.update);\n// \t\n// }\n// \n// let startX\n// let startY\n// let easing = 'Expo.easeInOut';\n// \n// function getDistance(object) {\n// \tconst helper = new THREE.BoundingBoxHelper(object, 0xff0000);\n// \thelper.update();\n// \n// \tlet width = helper.scale.x;\n// \tlet height = helper.scale.y;\n// \n// \t// Set camera distance\n// \tconst vFOV = camera.fov * Math.PI / 180;\n// \n// \tconst ratio = 2 * Math.tan( vFOV / 2 );\n// \tconst screen = ratio * camera.aspect;\n// \tconst size = Math.max(height,width);\n// \tconst distance = (size / screen) + (helper.box.max.z / screen);\n// \n// \treturn distance;\n// };\n// \n// function reset() {\n// \n// \tvar pos = { x: 0, y: 0 };\n// \tconst distance = 60;\n// \tconst speed = 1;\n//  \n// \tif ( camera.parent !== scene ) {\n// \t\tvar pos = camera.position.clone();\n// \t\tcamera.parent.localToWorld(camera.position);\n// \t\tscene.add(camera);\n// \t}\n//  \n// \ttimeline.clear();\n// \ttimeline.to( camera.position, speed, { \n// \tx: pos.x, \n// \ty: pos.y, \n// \tz: distance, \n// \tease: easing \n// \t}, 0);\n//  \ttimeline.to( camera.rotation, speed, { x: 0, y: 0, z: 0, ease: easing}, 0);\n// \n// }; \n// \n// function zoom(object) {\n// \n// \tconst pos = camera.position.clone();\n// \tobject.worldToLocal(camera.position);\n// \tobject.add(camera);\n// \n// \tconst speed = 1;\n// \ttimeline.clear();\n// \n// \ttimeline.to( camera.position, speed, {\n// \t\tx: pos.x,\n// \t\ty: pos.y,\n// \t\tz: getDistance(object),\n// \t\tease: easing\n// \t},0);\n// \n// };\n// \n// function mouseDown(e) {\n// \tconst x = ( e.touches ? e.touches[0].clientX : e.clientX );\n// \tconst y = ( e.touches ? e.touches[0].clientY : e.clientY );\n// \tconst mouse = {\n// \t\tx: ( x / window.innerWidth ) * 2 - 1,\n// \t\ty: - ( y / window.innerHeight ) * 2 + 1\n// \t};\n// \tconst vector = new THREE.Vector3( mouse.x, mouse.y ).unproject( camera );\n// \tconst raycaster = new THREE.Raycaster(camera.position, vector.sub(camera.position).normalize());\n// \tconst intersects = raycaster.intersectObject( scene, true );\n// \tif(intersects.length > 0 && intersects[0].object !== selected && intersects[0].object.name !== 'scene') {\n// \t\tselected = intersects[0].object;\n// \t\tconsole.log(selected);\n// \t\tzoom(selected);\n// \t} else {\n// \t\tselected = null;\n// \t\treset(); \n// \t}\n// }\n// \n// function onWindowResize() {\n// \tcamera.aspect = window.innerWidth / window.innerHeight;\n// \tcamera.updateProjectionMatrix();\n// \trenderer.setSize(window.innerWidth, window.innerHeight);\n// }\n// \n// function onDocumentMouseDown(event) {\n// \tevent.preventDefault();\n// \tisUserInteracting = true;\n// \tonPointerDownPointerX = event.clientX;\n// \tonPointerDownPointerY = event.clientY;\n// \tonPointerDownLon = lon;\n// \tonPointerDownLat = lat;\n// }\n// \n// function onDocumentMouseWheel( event ) {\n// \tconsole.log('event', camera.fov)\n// \n// \tcamera.fov += event.deltaY * 0.05;\n// \tcamera.updateProjectionMatrix();\n// \n// }\n// \n// function onDocumentMouseMove(event) {\n// \tif (isUserInteracting === true) {\n// \t\tlon = (onPointerDownPointerX - event.clientX) * 0.1 + onPointerDownLon;\n// \t}\n// }\n// \n// function onDocumentMouseUp(event) {\n// \tisUserInteracting = false;\n// }\n// \n// function onDocumentClick(event) {\n// \tcamera.fov = zoomed ? fovMin : fovMax\n// \t// i = zoomed ? -1 : 1\n// \tzoomed = !zoomed\n// \ttween\n// \t// .onUpdate(() => {\n// \t// \tcamera.fov = \n// \t// })\n// \t.start();\n// \n// \n// \t// int = setInterval(() => {\n// \t// \tval = val + 0.05*i;\n// \t// \tcamera.fov = val;\n// \t// \ti++;\n// \t// \tconsole.log(val);\n// \t// \tif(val > 85) {\n// \t// \t\tclearInterval(int)\n// \t// \t}\n// \t// },30);\n// }\n// \n// // var coords = { x: 0, y: 0 };\n// // var tween = new TWEEN.Tween({x: 75})\n// //     .to({x: 85}, 1000)\n// //     .onUpdate(function() {\n// //     \tcamera.fov = this.x\n// //     })\n// \n// function animate() {\n// \trequestAnimationFrame(animate);\n// \tupdate();\n// }\n// \n// function render() {\n// \trenderer.render(scene, camera);\n// }\n// \n// function update(time) {\n// \tlat = Math.max(-85, Math.min(85, lat));\n// \tphi = THREE.Math.degToRad(90 - lat);\n// \ttheta = THREE.Math.degToRad(lon);\n// \tcamera.target.x = 500 * Math.sin(phi) * Math.cos(theta);\n// \tcamera.target.y = 500 * Math.cos(phi);\n// \tcamera.target.z = 500 * Math.sin(phi) * Math.sin(theta);\n// \tcamera.lookAt(camera.target);\n// \t// TWEEN.update(time);\n// \t// camera.fov = camera.fov += 0.1 \n// \t// console.log(camera.fov)\n// \tcamera.updateProjectionMatrix();\n// \trender();\n// }\n// \n// function  orbit(origin, h, v, distance) {    \n// \torigin = origin || new THREE.Vector3();    \n// \tvar p = new THREE.Vector3();    \n// \tvar phi = v * Math.PI / 180;    \n// \tvar theta = h * Math.PI / 180;    \n// \tp.x = (distance * Math.sin(phi) * Math.cos(theta)) + origin.x;    \n// \tp.z = (distance * Math.sin(phi) * Math.sin(theta)) + origin.z;    \n// \tp.y = (distance * Math.cos(phi)) + origin.y;    \n// \treturn p;\n// }\n\nvar camera, scene, renderer;\n\n\tvar isUserInteracting = false,\n\tonMouseDownMouseX = 0, onMouseDownMouseY = 0,\n\tlon = 30, onMouseDownLon = 0,\n\tlat = 0, onMouseDownLat = 0,\n\tphi = 0, theta = 0;\n\n\tinit();\n\tanimate();\n\n\tfunction init() {\n\n\t\tvar container, mesh;\n\n\t\tcontainer = document.getElementById( 'container' );\n\n\t\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 1100 );\n\t\tcamera.target = new THREE.Vector3( 0, 0, 0 );\n\n\t\tscene = new THREE.Scene();\n\n\t\tvar geometry = new THREE.SphereGeometry( 500, 60, 400 );\n\t\tgeometry.scale( - 1, 1, 1 );\n\n\t\tvar material = new THREE.MeshBasicMaterial( {\n\t\t\tmap: new THREE.TextureLoader().load( 'textures/AnimusPanorama.jpg' )\n\t\t} );\n\n\t\tmesh = new THREE.Mesh( geometry, material );\n\n\t\tscene.add( mesh );\n\t\t\n\t\tvar camControls = new THREE.FirstPersonControls(camera);\n        camControls.lookSpeed = 0.4;\n        camControls.movementSpeed = 20;\n        camControls.noFly = true;\n        camControls.lookVertical = true;\n        camControls.constrainVertical = true;\n        camControls.verticalMin = 1.0;\n        camControls.verticalMax = 2.0;\n        camControls.lon = -150;\n        camControls.lat = 120;\n\t\t// camControls.update()\n\n\t\trenderer = new THREE.WebGLRenderer();\n\t\trenderer.setPixelRatio( window.devicePixelRatio );\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\t\tcontainer.appendChild( renderer.domElement );\n\t\tcontainer.addEventListener(\"mousedown\", getPosition, false);\n\n\t\tdocument.addEventListener( 'mousedown', onDocumentMouseDown, false );\n\t\tdocument.addEventListener( 'mousemove', onDocumentMouseMove, false );\n\t\tdocument.addEventListener( 'mouseup', onDocumentMouseUp, false );\n\t\tdocument.addEventListener( 'wheel', onDocumentMouseWheel, false );\n\t\t// document.addEventListener(\"DOMContentLoaded\", init, false);\n\n\n\t\tdocument.addEventListener( 'dragover', function ( event ) {\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.dataTransfer.dropEffect = 'copy';\n\n\t\t}, false );\n\n\t\tdocument.addEventListener( 'dragenter', function ( event ) {\n\n\t\t\tdocument.body.style.opacity = 0.5;\n\n\t\t}, false );\n\n\t\tdocument.addEventListener( 'dragleave', function ( event ) {\n\n\t\t\tdocument.body.style.opacity = 1;\n\n\t\t}, false );\n\n\t\tdocument.addEventListener( 'drop', function ( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tvar reader = new FileReader();\n\t\t\treader.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tmaterial.map.image.src = event.target.result;\n\t\t\t\tmaterial.map.needsUpdate = true;\n\n\t\t\t}, false );\n\t\t\treader.readAsDataURL( event.dataTransfer.files[ 0 ] );\n\n\t\t\tdocument.body.style.opacity = 1;\n\n\t\t}, false );\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t}\n\n\tfunction onWindowResize() {\n\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\tcamera.updateProjectionMatrix();\n\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t}\n\n\tfunction onDocumentMouseDown( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tisUserInteracting = true;\n\n\t\tonPointerDownPointerX = event.clientX;\n\t\t// onPointerDownPointerY = event.clientY;\n\n\t\tonPointerDownLon = lon;\n\t\t// onPointerDownLat = lat;\n\n\t}\n\n\tfunction onDocumentMouseMove( event ) {\n\n\t\tif ( isUserInteracting === true ) {\n\n\t\t\tlon = ( onPointerDownPointerX - event.clientX ) * 0.1 + onPointerDownLon;\n\t\t\t// lat = ( event.clientY - onPointerDownPointerY ) * 0.1 + onPointerDownLat;\n\n\t\t}\n\n\t}\n\n\tfunction onDocumentMouseUp( event ) {\n\n\t\tisUserInteracting = false;\n\n\t}\n\n\t// Zoom in & out | Need to limit this to the starting point and a endind point\n\tfunction onDocumentMouseWheel( event ) {\n\t\t\n\t\tcamera.fov += event.deltaY * 0.05;\n\t\tcamera.updateProjectionMatrix();\n\n\t}\n\n\tfunction animate() {\n\n\t\trequestAnimationFrame( animate );\n\t\tupdate();\n\n\t}\n\n\tfunction update() {\n\n\t\tif ( isUserInteracting === false ) {\n\t\t\t// lon += 0.1;\n\t\t}\n\n\t\tlat = Math.max( - 85, Math.min( 85, lat ) );\n\t\tphi = THREE.Math.degToRad( 90 - lat );\n\t\ttheta = THREE.Math.degToRad( lon );\n\n\t\tcamera.target.x = 500 * Math.sin( phi ) * Math.cos( theta );\n\t\tcamera.target.y = 500 * Math.cos( phi );\n\t\tcamera.target.z = 500 * Math.sin( phi ) * Math.sin( theta );\n\n\t\tcamera.lookAt( camera.target );\n\n\t\t/*\n\t\t// distortion\n\t\tcamera.position.copy( camera.target ).negate();\n\t\t*/\n    \t// camControls.update()\n\t\trenderer.render( scene, camera );\n\n\t}\n\t\n\tfunction getPosition(event) {\n\t\tvar x = new Number();\n\t\tvar y = new Number();\n\t\tvar container = document.getElementById( 'container' );\n\t\t\n\t\tif (event.x != undefined && event.y != undefined) {\n\t\t\tx = event.x;\n\t\t\ty = event.y;\n\t\t} else { // Firefox method to get the position\n\t\t\tx = event.clientX + document.body.scrollLeft +\n\t\t\tdocument.documentElement.scrollLeft;\n\t\t\ty = event.clientY + document.body.scrollTop +\n\t\t\tdocument.documentElement.scrollTop;\n\t\t}\n\t\t\n\t\tx -= container.offsetLeft;\n\t\ty -= container.offsetTop;\n\t\t\n\t\tconsole.log(\"x: \" + x + \"  y: \" + y);\n\t}\n"]}